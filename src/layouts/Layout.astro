---
export interface Props {
  title: string;
}

import { NeoThemeProvider } from "@avaya/neo-react";

import { SiteHeader, SiteFooter, DynamicTheme } from "components";

import LeftPanel from "./LeftPanel.astro";

import type { PageAstroInstance } from "helpers/types";

import { getPagesInOrder } from "helpers";

import "@avaya/neo-react/avaya-neo-react.css";

import { breakpoints } from "components/react/utils";

const userAgentString = Astro.request.headers.get("user-agent");

const userAgent = userAgentString?.toLowerCase().includes("mac")
  ? "macos"
  : "windows";

// let screenWidth = window.screen.width;

const { title } = Astro.props as Props;

const { pathname } = Astro.url;
console.log({pathname});

const pages = getPagesInOrder(
  (await Astro.glob<PageAstroInstance>("../**/*.astro"))
    .filter((page) => page.title)
    .map(({ title, keywords, order, ...rest }) => ({
      ...rest,
      title,
      keywords,
      order,
    })),
);

console.log("pages ->", pages);

let leftNavPages: PageAstroInstance[] = [];
let isHomePage = false;
switch (pathname.split("/")[1]) {
  case "accessibility":
    leftNavPages = pages.accessibility;
    break;

  case "components":
    leftNavPages = pages.components;
    break;

  case "docs":
    leftNavPages = pages.docs;
    break;

  case "guidelines":
    leftNavPages = pages.guidelines;
    break;

  case "":
    isHomePage = true;
    break;

  default: // icons
    break;
}
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />

    <script async src="https://rum.cronitor.io/script.js"></script>
    <script>
      window.cronitor =
        window.cronitor ||
        function () {
          (window.cronitor.q = window.cronitor.q || []).push(arguments);
        };
      // eslint-disable-next-line no-undef
      cronitor("config", { clientKey: "7a4551f7269f527ea46053a3f21302fa" });
    </script>

    <title>{title}</title>
  </head>

  <body id="body-content-wrapper">
    <NeoThemeProvider initialMode="dynamic">
      <SiteHeader
        pathname={pathname}
        pages={pages}
        userAgent={userAgent}
        showToggleBtn={leftNavPages.length > 0 || (isHomePage)}
        client:load
      />

      <div class="main__wrapper">
        <LeftPanel allPages={pages} leftNavPages={leftNavPages} isHomePage={isHomePage} />
        {
          pathname.endsWith("icons") ? (
            <DynamicTheme client:only="react">
              <main id="main-content">
                <slot />
              </main>
            </DynamicTheme>
          ) : (
            <main id="main-content">
              <slot />
            </main>
          )
        }
      </div>

      <SiteFooter />
    </NeoThemeProvider>

    <style is:global>
      :root {
        --header-height: 58px;
        --footer-height: 58px;

        /*
        --mobile-small-max-breakpoint: 671px;
        --mobile-max-breakpoint: 831px;
        --tablet-max-breakpoint: 1279px;
        */
      }

      body {
        font-size: 1rem;
        color: var(--global-font-color);
      }

      .main__theme__styles {
        width: 100%;
        color: var(--global-font-color);
        background-color: var(--global-background);
      }

      .code {
        background-color: var(--neo-color-base-100);
        color: var(--neo-color-red-600);
        font-family: monospace;
      }

      .neo-dark .code {
        background-color: var(--neo-color-base-800);
        color: var(--neo-color-red-200);
      }

      /* mobile */
      @media screen and (max-width: 831px) {
        :root {
          --header-height: 49px;
          --footer-height: 48px;
        }
      }

      p .neo-link__inline,
      div .neo-link__inline {
        display: inline-block;
      }

      ul.dash-list {
        list-style-type: "- ";
        line-height: 28px;
      }

      /* HACK: force left align until fix is made in neo-css lib (`_tooltip.scss` line 37) */
      .neo-tooltip__content {
        text-align: left;
      }

      /* helper class */
      .hidden {
        display: none;
      }

      .image-header {
        margin-bottom: 0.5rem;
      }
    </style>
  </body>

  <style>
    body {
      margin: 0;
    }

    body main {
      --body-main-margin-top: 3rem;

      /* plus `1px` for border */
      --body-main-height: calc(
        100vh - var(--header-height) - var(--footer-height) -
          var(--body-main-margin-top) - 1px
      );

      min-height: var(--body-main-height);
      max-width: 60rem;
      padding: 0 1rem 2rem 1rem;
      margin: auto;
      margin-top: var(--body-main-margin-top);
    }
    body main:has(.homepage-intro-container) {
      --body-main-margin-top: 0;

      width: 100%;
      max-width: 100%;
      padding: 0;
    }

    .main__wrapper {
      display: flex;
    }

    @media screen and (max-width: 1279px) {
      body main {
        /*
            `LeftNavigationStyleOverride.css` adds `margin-bottom: 3rem;` at `@media (max-width: 1279px)`
          */
        --body-main-height: calc(
          100vh - var(--header-height) - var(--footer-height) -
            var(--body-main-margin-top) - 3rem - 1px
        );
      }
    }
    @media screen and (max-width: 831px) {
      body main {
        /*
            NOTE: the footer and header both expand into a grid format, so we _do_ want the `var`s
            to remain as they are, thus why we need this "special/tribal knowledge" implementation
          */
        --body-main-height: calc(
          100vh - var(--header-height) - (var(--footer-height) * 3) - 1px -
            (var(--body-main-margin-top) * 2) - 1px
        );
      }

      .main__wrapper {
        display: block;
        position: relative;
        overflow-x: hidden;
      }
    }
  </style>
</html>
