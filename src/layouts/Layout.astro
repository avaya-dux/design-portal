---
export interface Props {
  title: string;
}

import { NeoThemeProvider } from "@avaya/neo-react";

import { SiteHeader, SiteFooter } from "components";

import { LeftNavigation } from "components/react";

import type { PageAstroInstance } from "helpers/types";

import "@avaya/neo-react/avaya-neo-react.css";

const userAgentString = Astro.request.headers.get("user-agent");

const userAgent = userAgentString?.toLowerCase().includes("mac")
  ? "macos"
  : "windows";

const { title } = Astro.props as Props;

const { url } = Astro.request;

const { pathname } = Astro.url;

const isComponentPage = url.includes("components");

let componentPages: PageAstroInstance[] = [];

const pages = (await Astro.glob<PageAstroInstance>("../**/*.astro"))
  .filter((page) => page.title)
  .map((page) => ({
    ...page,
    title: page.title,
    keywords: page.keywords,
  }));

if (isComponentPage)
  componentPages = pages.filter((page) => page.url?.includes("components"));
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>

  <body id="body-content-wrapper">
    <NeoThemeProvider initialMode="dynamic">
      <SiteHeader
        pathname={Astro.url.pathname}
        pages={pages}
        userAgent={userAgent}
        client:load
      />

      <div class="main__wrapper">
        {
          // TO-DO: It would probably be good to create an object with all the pathnames of pages
          // which don't have/need the Left Navigation, when we have a better idea of these
          // and use it here instead of this single comparison
          pathname !== "/icons" && (
            <LeftNavigation
              pages={componentPages}
              currentUrl={pathname}
              client:load
            />
          )
        }

        <main id="main-content">
          <slot />
        </main>
      </div>

      <SiteFooter />
    </NeoThemeProvider>

    <style is:global>
      :root {
        --header-height: 58px;
        --footer-height: 58px;

        /*
        --mobile-small-max-breakpoint: 671px;
        --mobile-max-breakpoint: 799px;
        --tablet-max-breakpoint: 1279px;
        */
      }

      body {
        font-size: 1rem;
        color: var(--global-font-color);
      }

      /* mobile */
      @media screen and (max-width: 799px) {
        :root {
          --header-height: 48px;
          --footer-height: 48px;
        }
      }

      a {
        text-decoration: none;
      }

      ul.dash-list {
        list-style-type: "- ";
        line-height: 28px;
      }
    </style>

    <style>
      body {
        margin: 0;
      }

      body main {
        /* plus `1px` for border */
        --body-main-height: calc(
          100vh - var(--header-height) - var(--footer-height) - 1px
        );

        min-height: var(--body-main-height);
        max-width: 60rem;
        padding: 0 1rem 2rem 1rem;
        margin: auto;
        margin-top: 3rem;
      }

      .main__wrapper {
        display: flex;
      }

      @media screen and (max-width: 799px) {
        body main {
          --body-main-height: calc(
            100vh - var(--header-height) - (var(--footer-height) * 3) - 1px
          );
        }

        .main__wrapper {
          display: block;
          position: relative;
          overflow-x: hidden;
        }
      }
    </style>
  </body>
</html>
