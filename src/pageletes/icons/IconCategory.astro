---
import { icons } from "./icons";
import { Icon } from "@avaya/neo-react";

export interface Props {
  category: string;
}

const { category } = Astro.props as Props;

const iconsInCategory = icons
  .filter((icon) => icon.category === category)
  .sort((a, b) => (a.name > b.name ? 1 : -1));
---

<div class="icon-category">
  <h4>{category}</h4><div class="icon-category__icons">
    {
      iconsInCategory.map((icon) => (
        <div class="icon-category__icons__card">
          <Icon icon={icon.name} aria-label={`${icon.name} icon`} size="lg" />
          <p>{icon.name}</p>
        </div>
      ))
    }
  </div>
</div>

<style>
  .icon-category {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;
    margin-bottom: 4rem;
  }

  .icon-category h4 {
    width: 100%;
    text-transform: capitalize;
    border-bottom: 1px solid var(--navbar-border-bottom-color);
    padding-bottom: 0.5rem;
    margin-bottom: 1rem;
  }

  .icon-category__icons {
    --grid-layout-gap: 15px;
    --grid-column-count: 10;
    --grid-item--min-width: 160px;
    --gap-count: calc(var(--grid-column-count) - 5);
    --total-gap-width: calc(var(--gap-count) * var(--grid-layout-gap));
    --grid-item--max-width: calc(
      (100% - var(--total-gap-width)) / var(--grid-column-count)
    );
    width: 100%;
    display: grid;
    grid-template-columns: repeat(
      auto-fill,
      minmax(Max(var(--grid-item--min-width), var(--grid-item--max-width)), 1fr)
    );
    grid-gap: var(--grid-layout-gap);
    grid-row-gap: 16px;
  }

  .icon-category__icons__card {
    height: 10rem;
    width: 11rem;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
  }
</style>
