---
import { Image } from "@avaya/neo-react";
import {
  ColumnLayout,
  Description,
  DoAndDont,
  InfoTable,
  InfoTableBody,
  InfoTableCell,
  InfoTableCellHead,
  InfoTableHead,
  InfoTableRow,
  PageleteSection,
  PageleteSubSection,
  SectionHeader,
  StackedLayout,
  SubHeader,
} from "components";

import { topics } from "../static";

const { id, title } = topics.behavior;

import PlacementImage from "../imgs/toast-placement.svg";
const placementImgAltText =
  "Image showing the location in the screen where a toast appears";

import doImage1 from "../imgs/toast-behavior-do-1.svg";
import dontImage1 from "../imgs/toast-behavior-dont-1.svg";
const do1Instructions =
  "Use a toast to provide feedback for commonly performed actions.";
const dont1Instructions =
  "Do not use a toast to display error message, use notification component instead.";

import doImage2 from "../imgs/toast-behavior-do-1.svg";
import dontImage2 from "../imgs/toast-behavior-dont-2.svg";
const do2Instructions = "Add text here";
const dont2Instructions = "Add text here";
---

<PageleteSection>
  <SectionHeader id={id}>
    {title}
  </SectionHeader>

  <Description>
    When you want to give feedback to your users about a action they take. Often
    this is in the form of creation or deletion.
  </Description>

  <InfoTable>
    <InfoTableHead>
      <InfoTableRow>
        <InfoTableCellHead>Component</InfoTableCellHead>
        <InfoTableCellHead>Priority</InfoTableCellHead>
        <InfoTableCellHead>User Action</InfoTableCellHead>
      </InfoTableRow>
    </InfoTableHead>

    <InfoTableBody>
      <InfoTableRow>
        <InfoTableCell>Toast</InfoTableCell>
        <InfoTableCell>Low priority</InfoTableCell>
        <InfoTableCell>
          Feedback (Alert) that do not need to interrupt the user flow. They
          should be used for confirmation in response to an action. Toasts
          disappear automatically
        </InfoTableCell>
      </InfoTableRow>

      <InfoTableRow>
        <InfoTableCell>Notification</InfoTableCell>
        <InfoTableCell>Prominent priority</InfoTableCell>
        <InfoTableCell>
          Items that require immediate attention. They can be persistent or
          dismissable depending on the context. Remain until dismissed by the
          user, or if the state that cause the notification is resolved.
          (Notification inline)
        </InfoTableCell>
      </InfoTableRow>

      <InfoTableRow>
        <InfoTableCell>Modal</InfoTableCell>
        <InfoTableCell>Highest priority</InfoTableCell>
        <InfoTableCell>
          Modal block app usage until the user a modal action or exits the
          dialog (If available)
        </InfoTableCell>
      </InfoTableRow>
    </InfoTableBody>
  </InfoTable>

  <PageleteSubSection>
    <SubHeader id="toast-behavior-placement">Placement</SubHeader>

    <Description>
      Toasts are placed in a location that is easily visible to users, but does
      not obstruct their view or interrupt their flow. A common placement for
      toast notifications is in the top center of the screen.
    </Description>
    <Description>
      If multiple toast notifications are triggered in quick succession, they
      should be stacked on top of each other to avoid cluttering the screen.
      Each notification should be visible for a short period of time before
      disappearing, allowing users to quickly scan through them if necessary.
    </Description>

    <ColumnLayout bkgColor="white" numOfColumns={1} marginTop={"1.5rem"}>
      <StackedLayout vPadding="0px">
        <Image src={PlacementImage.src} alt={placementImgAltText} />
      </StackedLayout>
    </ColumnLayout>

    <DoAndDont>
      <DoAndDont.DoContainer instructions={do1Instructions}>
        <DoAndDont.ImageExampleContainer>
          <Image
            src={doImage1.src}
            alt="Image showing a toast notifying user that a file was successfuly saved"
          />
        </DoAndDont.ImageExampleContainer>
      </DoAndDont.DoContainer>

      <DoAndDont.DontContainer instructions={dont1Instructions}>
        <DoAndDont.ImageExampleContainer>
          <Image
            src={dontImage1.src}
            alt="Image showing a toast notifying user about an error condition"
          />
        </DoAndDont.ImageExampleContainer>
      </DoAndDont.DontContainer>
    </DoAndDont>
  </PageleteSubSection>

  <PageleteSubSection>
    <SubHeader id="toast-behavior-duration">Duration</SubHeader>

    <Description>
      The duration of a toast should be short enough to convey the message, but
      not so long that they become a distraction or annoyance. A common duration
      for a toast is between 2-5 seconds, depending on the complexity of the
      message and the user's familiarity with the app or website.
    </Description>
  </PageleteSubSection>

  <PageleteSubSection>
    <SubHeader id="toast-behavior-text-length">Text Length</SubHeader>

    <Description>
      The toast message should be short and to the point. It should not have a
      lot of copy where it covers a large part of the dashboard. Avoid wrapping
      the text in multiple lines.
    </Description>

    <DoAndDont>
      <DoAndDont.DoContainer instructions={do2Instructions}>
        <DoAndDont.ImageExampleContainer>
          <Image
            src={doImage2.src}
            alt="Image showing a toast notifying user that a file was successfuly saved"
          />
        </DoAndDont.ImageExampleContainer>
      </DoAndDont.DoContainer>

      <DoAndDont.DontContainer instructions={dont2Instructions}>
        <DoAndDont.ImageExampleContainer>
          <Image
            src={dontImage2.src}
            alt="Image showing a toast notifying user about an error condition"
          />
        </DoAndDont.ImageExampleContainer>
      </DoAndDont.DontContainer>
    </DoAndDont>
  </PageleteSubSection>
</PageleteSection>
